{"version":3,"sources":["NewsCard/NewsCard.js","Auth/Auth.js","NewsPanel/NewsPanel.js","Base/Base.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","App/App.js","serviceWorker.js","index.js"],"names":["NewsCard","url","window","open","_this","this","react_default","a","createElement","className","onClick","redirectToUrl","props","news","src","urlToImage","alt","title","description","source","reason","time","React","Component","Auth","token","email","localStorage","setItem","getItem","console","log","removeItem","NewsPanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleScroll","bind","assertThisInitialized","loadMoreNews","_","debounce","addEventListener","scrollY","pageYOffset","document","documentElement","scrollTop","innerHeight","body","offsetHeight","e","_this2","request","Request","method","headers","Authorization","getToken","cache","fetch","then","res","json","setState","concat","news_list","map","key","digest","href","src_NewsCard_NewsCard","renderNews","id","withRouter","_ref","children","history","react_router_dom","to","isUserAuthenticated","getEmail","deauthenticateUser","Base_this","push","LoginForm","onSubmit","onChange","errors","user","action","summary","type","name","htmlFor","password","value","LoginPage","processForm","changeUser","event","preventDefault","Accept","Content-Type","JSON","stringify","response","status","error","authenticateUser","replace","message","field","target","src_Login_LoginForm","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","App","src_Base_Base","react_router","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4cae164.chunk.js","sourcesContent":["import './NewsCard.css';\n\nimport React from 'react';\n\nclass NewsCard extends React.Component {\n    redirectToUrl(url) {\n        window.open(url, '_blank');\n    }\n    \n    render() {\n        return (\n            <div className='news-container' onClick={() => this.redirectToUrl(this.props.news.url)}>\n                <div className='card horizontal'>\n                    <div className='card-image'>\n                        <img src={this.props.news.urlToImage} alt='news' />\n                    </div>\n                    <div className='card-stacked'>\n                        <div className=\"card-content\">\n                            <span className='card-title'>{this.props.news.title}</span>\n                            <p>{this.props.news.description}</p>\n                        </div>\n                        <div className=\"card-action\">\n                            <div>\n                                {this.props.news.source != null && <div className='chip light-blue news-chip'>{this.props.news.source}</div>}\n                                {this.props.news.reason != null && <div className='chip light-green news-chip'>{this.props.news.reason}</div>}\n                                {this.props.news.time != null && <div className='chip amber news-chip'>{this.props.news.time}</div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewsCard;","class Auth {\n    /**\n     * Authenticate a user. Save token string in localStorage\n     * @param {string} token\n     * @param {string} email\n     */\n    static authenticateUser(token, email) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', email);\n    }\n\n    /**\n     * Check if a user is Authenticated, aka, if a token is saved in localStorage\n     * @returns {boolean}\n     */\n    static isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    /**\n     * Deauthenticate a user. Remove token and email from localStorage\n     */\n    static deauthenticateUser() {\n        let token = localStorage.getItem('token')\n        console.log(token)\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n    }\n\n    /**\n     * Get a token value\n     * \n     * @returns {string}\n     */\n    static getToken() {\n        console.log(localStorage.getItem('token'));\n        return localStorage.getItem('token');\n    }\n\n    /**\n     * Get email\n     * \n     * @returns {string}\n     */\n    static getEmail() {\n        return localStorage.getItem('email');\n    }\n}\n\nexport default Auth;","import \"./NewsPanel.css\";\nimport React from 'react';\nimport NewsCard from '../NewsCard/NewsCard';\nimport Auth from '../Auth/Auth';\nimport _ from 'lodash';\n\nclass NewsPanel extends React.Component {\n    constructor() {\n        super();\n        this.state = {news: null};\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadMoreNews();\n        this.loadMoreNews = _.debounce(this.loadMoreNews, 1000);\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll() {\n        let scrollY = window.scrollY || window.pageYOffset || document.documentElement.scrollTop;\n        if ((window.innerHeight + scrollY) >= (document.body.offsetHeight - 50)) {\n            console.log('Loading more news');\n            this.loadMoreNews();\n        }\n    }\n\n    loadMoreNews(e) {\n        let request = new Request('http://localhost:3000/news', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'bearer ' + Auth.getToken(),\n            },\n            cache: 'no-cache',\n        });\n\n        fetch(request)\n            .then((res) => res.json())\n            .then((news) => {\n                this.setState({\n                    news: this.state.news? this.state.news.concat(news) : news,\n                })\n            })\n    }\n\n    renderNews() {\n        console.log(this.state.news);\n        let news_list = this.state.news.map(news => {\n            return(\n                <a className='list-group-item' key={news.digest} href='#'>\n                    <NewsCard news={news} />\n                </a>\n            );\n        });\n\n        return (\n            <div className='container-fluid'>\n                <div className='list-group'>\n                    {news_list}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        if(this.state.news) {\n            return (\n                <div>\n                    {this.renderNews()}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div id='msg-app-loading'>\n                        Loading...\n                    </div>  \n                </div>\n            );\n        }\n    }\n}\n\nexport default NewsPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Auth from '../Auth/Auth.js';\nimport './Base.css';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst Base = ({ children, history }) => (\n    <div>\n        <nav className=\"nav-bar lighten-1\">\n            <div className=\"nav-wrapper\">\n                <Link to=\"/\" className=\"brand-logo\">&nbsp;&nbsp;Tap News</Link>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    {Auth.isUserAuthenticated() ?\n                        (<div>\n                            <li>{Auth.getEmail()}</li>\n                            <li>\n                                <button onClick={() => {\n                                    Auth.deauthenticateUser(() => this.props.history.push(\"/logout\"));\n                                }}>Log out</button>\n                            </li>\n                        </div>)\n                        : (<div>\n                            <li><Link to=\"/login\">Log in</Link></li>\n                            <li><Link to=\"/signup\">Sign up</Link></li>\n                        </div>)\n                    } \n                </ul>\n            </div>\n        </nav>\n        <br />\n        {children}\n    </div>\n);\n\nBase.propTypes = {\n    children: PropTypes.object.isRequired\n};\n\nexport default withRouter(Base);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\n\nconst LoginForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    user }) => (\n\t<div className=\"container\">\n    \t<div className=\"card-panel login-panel\">\n      \t\t<form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n        \t\t<h4 className=\"center-align\">Login</h4>\n        \t\t{errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n        \t\t<div className=\"row\">\n          \t\t\t<div className=\"input-field col s12\">\n            \t\t\t<input className=\"validate\" id=\"email\" type=\"email\" name=\"email\" onChange={onChange}/>\n            \t\t\t<label htmlFor='email'>Email</label>\n          \t\t\t</div>\n        \t\t</div>\n        \t\t{errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n        \t\t<div className=\"row\">\n          \t\t\t<div className=\"input-field col s12\">\n            \t\t\t<input className=\"validate\" id=\"password\" type=\"password\" name=\"password\" onChange={onChange}/>\n            \t\t\t<label htmlFor='password'>Password</label>\n          \t\t\t</div>\n\t\t\t\t</div>\n        \t\t{errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n        \t\t<div className=\"row right-align\">\n          \t\t\t<input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Log in'/>\n        \t\t</div>\n        \t\t<div className=\"row\">\n          \t\t\t<p className=\"right-align\"> New to Tap News?  <a href=\"/signup\">Sign Up</a></p>\n        \t\t</div>\n      \t\t</form>\n    \t</div>\n\t</div> \n);\n\nLoginForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terrors: PropTypes.object.isRequired,\n\tuser: PropTypes.object.isRequired\n}\n\nexport default LoginForm;\n\n","// Handle the login logic\nimport React, { Component } from 'react';\nimport Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n            user: {\n                email: '',\n                password: ''\n            }\n        };\n\n        this.processForm = this.processForm.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n    processForm(event) {\n        event.preventDefault()\n\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        console.log('email:', email);\n        console.log('password:', password);\n\n        //post login data\n        fetch('http://localhost:3000/auth/login', {\n            method: 'POST',\n            cache: \"no-cache\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    error: {}\n                });\n                \n                response.json().then((json) => {\n                    console.log(json);\n                    Auth.authenticateUser(json.token, email);\n                    this.props.history.replace('/');\n                });\n            } else {\n                console.log('login failed');\n                response.json().then((json) => {\n                    const errors = json.errors ? json.errors : {};\n                    errors.summary = json.message;\n                    this.setState({errors});\n                });\n            }\n        });\n    }\n\n    changeUser(event) {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({ user });\n    }\n\n    render() {\n        return (\n            <LoginForm \n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nexport default LoginPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SignUpForm.css';\n\nconst SignUpForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    user\n}) => (\n    <div className=\"container\">\n        <div className=\"card-panel signup-panel\">\n            <form className=\"col s12\" action=\"/\" onSubmit={onSubmit}>\n                <h4 className=\"center-align\">Sign Up</h4>\n                {errors.summary && <div className=\"row\"><p className=\"error-message\">{errors.summary}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"email\" type=\"email\" name=\"email\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                </div>\n                {errors.email && <div className=\"row\"><p className=\"error-message\">{errors.email}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"password\" type=\"password\" name=\"password\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                </div>\n                {errors.password && <div className=\"row\"><p className=\"error-message\">{errors.password}</p></div>}\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"confirm_password\" type=\"password\" name=\"confirm_password\" className=\"validate\" onChange={onChange}/>\n                        <label htmlFor=\"confirm_password\">Confirm Password</label>\n                    </div>\n                </div>\n                <div className=\"row right-align\">\n                    <input type=\"submit\" className=\"waves-effect waves-light btn indigo lighten-1\" value='Sign Up'/>\n                </div>\n                <div className=\"row\">\n                    <p className=\"right-align\"> Already have an account? <a href=\"/login\">Login</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n);\n\nSignUpForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nexport default SignUpForm;","import React, { Component } from 'react';\nimport SignUpForm from './SignUpForm';\n\nclass SignUpPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            user: {\n                email: '',\n                password: '',\n                confirm_password: ''\n            }\n        }\n\n        this.processForm = this.processForm.bind(this);\n        this.changeUser = this.changeUser.bind(this);\n    }\n\n    processForm(event) {\n        event.preventDefault();\n\n        const email = this.state.user.email;\n        const password = this.state.user.password;\n        const confirm_password = this.state.user.confirm_password;\n\n        console.log('email: ', email);\n        console.log('password: ', password);\n        console.log('confirm_password: ', confirm_password);\n\n        if (password !== confirm_password) {\n            return;\n        }\n\n        fetch('http://localhost:3000/auth/signup', {\n            method: 'POST',\n            cache: 'no-cache',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.user.email,\n                password: this.state.user.password\n            })\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    errors: {}\n                })\n                // Change current url to login\n                this.props.history.push('/login');\n            } else {\n                response.json().then(function(json){\n                    console.log(json);\n                    const errors = json.errors? json.errors: {};\n                    errors.summary = json.message;\n                    console.log(this.state.errors);\n                    this.setState({\n                        errors\n                    })\n                }.bind(this));\n            }\n        })\n    }\n\n    changeUser(event) {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({user});\n        console.log(this.state.user.password);\n        if (this.state.user.password !== this.state.user.confirm_password) {\n            const errors = this.state.errors;\n            errors.password = \"Password and Confirm Password don't match.\";\n            this.setState({ errors });\n        } else {\n            const errors = this.state.errors;\n            errors.password = '';\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n        return (\n            <SignUpForm \n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nexport default SignUpPage;","import \"../../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../../node_modules/materialize-css/dist/js/materialize.min\";\n\nimport React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport './App.css';\nimport NewsPanel from \"../NewsPanel/NewsPanel\";\nimport Base from \"../Base/Base\";\nimport LoginPage from \"../Login/LoginPage\";\nimport SignUpPage from \"../SignUp/SignUpPage\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className='title'>What's happening out there</h1>\n        <div className='container'>\n          <Base>\n            <Switch>\n              <Route path=\"/login\" component={LoginPage} />\n              <Route path=\"/signup\" component={SignUpPage} />\n              <Route path=\"/\" component={NewsPanel} />\n            </Switch>\n          </Base>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}